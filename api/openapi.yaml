# Copyright (c) HashiCorp, Inc.
# SPDX-License-Identifier: MPL-2.0

openapi: "3.0.0"
info:
  version: 1.0.0
  title: CTS API
  description: API Documentation for Consul-Terraform-Sync, for more information see [Consul NIA API](https://www.consul.io/docs/nia/api)
  contact:
    name: api-tooling-core
  license:
    name: MPL-2.0 License
    url: https://github.com/hashicorp/consul-terraform-sync/blob/main/LICENSE
servers:
  - url: '{protocol}://{host}:{port}'
    description: The Consul-Terraform-Sync Server
    variables:
      protocol:
        enum:
          - 'http'
          - 'https'
        default: 'http'
      host:
        default: 'localhost'
      port:
        default: '8558'
paths:
  /v1/status/cluster:
    get:
      summary: Gets cluster status when CTS is configured with high availability
      operationId: getClusterStatus
      tags:
        - status
        - enterprise
      description: CTS Enterprise Only. Checks the current status of the CTS cluster and returns a list of cluster members and their associated metadata
      responses:
        '200':
          description: Status of cluster members
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClusterStatusResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/health:
    get:
      summary: Gets health status
      operationId: getHealth
      tags:
        - health
      description: Checks the health of CTS
      responses:
        '200':
          description: CTS is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        default:
          description: CTS is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'

  /v1/tasks:
    post:
      summary: Creates a new task
      operationId: createTask
      tags:
        - tasks
      description: |
        Creates a new task
      parameters:
        - name: run
          in: query
          description: |
            Different modes for running. Supports run now which runs the task immediately
            and run inspect which creates a dry run task that is inspected and discarded
            at the end of the inspection.
          required: false
          schema:
            type: string
            enum: [now, inspect]
      requestBody:
        description: Task to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
      responses:
        '200':
          description: Task response with inspection, task not created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        '201':
          description: Task response, task is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: Gets all tasks
      operationId: getAllTasks
      description: Retrieves information for all tasks
      tags:
        - tasks
      responses:
        '200':
          description: Tasks retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TasksResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/tasks/{name}:
    delete:
      summary: Marks a task for deletion
      operationId: deleteTaskByName
      description: |
        Marks a single task for deletion based on the name provided. The task will be
        deleted once it is not running.
      tags:
        - tasks
      parameters:
        - name: name
          in: path
          description: Name of task to delete
          required: true
          schema:
            type: string
            example: "taskA"
      responses:
        '202':
          description: Task marked for deletion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDeleteResponse'
              example:
                request_id: "bb63cd70-8f45-4f42-b27b-bc2a6f4931e6"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: Gets a task by name
      operationId: getTaskByName
      description: Retrieves information for a single task based on the name provided
      tags:
        - tasks
      parameters:
        - name: name
          in: path
          description: Name of task to retrieve
          required: true
          schema:
            type: string
            example: "taskA"
      responses:
        '200':
          description: Task retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    ClusterStatusResponse:
      type: object
      additionalProperties: false
      properties:
        cluster_name:
          description: the name of the CTS cluster
          type: string
          example: cluster-a
        members:
          description: the list of CTS instances which are part of this cluster
          type: array
          items:
            $ref: '#/components/schemas/Member'
          example:
            - id: cts-01
              service_name: consul-terraform-sync
              healthy: true
              leader: true
              address: cts-01.example.com
            - id: cts-02
              service_name: consul-terraform-sync
              healthy: false
              leader: false
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
        - cluster_name
        - members
        - request_id

    TaskRequest:
      type: object
      additionalProperties: false
      properties:
        task:
          $ref: '#/components/schemas/Task'
      required:
        - task

    TasksResponse:
      type: object
      additionalProperties: false
      properties:
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
        - request_id

    TaskResponse:
      type: object
      additionalProperties: false
      properties:
        task:
          $ref: '#/components/schemas/Task'
        request_id:
          $ref: '#/components/schemas/RequestID'
        run:
          $ref: '#/components/schemas/Run'
        error:
          $ref: '#/components/schemas/Error'
      required:
        - request_id

    TaskDeleteResponse:
      type: object
      additionalProperties: false
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
        error:
          $ref: '#/components/schemas/Error'
      required:
        - request_id

    ErrorResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
        - error
        - request_id

    Member:
      type: object
      additionalProperties: false
      properties:
        id:
          description: the id of the CTS instance
          type: string
          example: cts-01
        service_name:
          description: the service name of the CTS instance
          type: string
          example: consul-terraform-sync
        healthy:
          description: the health status of the cts instance
          type: boolean
          example: true
        leader:
          description: boolean true if CTS instance is a cluster leader, false otherwise
          type: boolean
          example: true
        address:
          description: the address if this instance is the CTS leader, empty otherwise
          type: string
          example: cts-01.example.com
      required:
        - id
        - service_name
        - healthy
        - leader

    Task:
      type: object
      additionalProperties: false
      properties:
        description:
          description: The human readable text to describe the task.
          type: string
          example: "an example task"
        enabled:
          description: Whether the task is enabled or disabled from executing.
          type: boolean
          example: true
          default: true
        name:
          description: The unique name of the task.
          type: string
          example: "taskA"
        providers:
          description: The list of provider names that the task's module uses.
          type: array
          items:
            type: string
          example: []
        module:
          description: The location of the Terraform module.
          type: string
          example: "org/example/module"
        variables:
          $ref: '#/components/schemas/VariableMap'
        version:
          description: The version of the configured module that the task uses. Defaults to the latest version if not set.
          type: string
          example: "1.0.0"
        buffer_period:
          $ref: '#/components/schemas/BufferPeriod'
        condition:
          $ref: '#/components/schemas/Condition'
        module_input:
          $ref: '#/components/schemas/ModuleInput'
        terraform_version:
          type: string
          description: Deprecated, use task.terraform_cloud_workspace.terraform_version instead. Enterprise only. The version of Terraform to use for the Terraform Cloud workspace associated with the task. This is only available when used with the Terraform Cloud driver. Defaults to the latest compatible version if not set.
          example: "1.0.0"
        terraform_cloud_workspace:
          $ref: '#/components/schemas/TerraformCloudWorkspace'
      required:
        - name
        - module
        - condition
      example:
        condition:
          services:
            names: ["web", "api"]
        description: "A basic task"
        enabled: true
        name: taskC
        providers: []
        module: org/example/module
        variables:
          var1: example.field
        version: 1.0.0

    BufferPeriod:
      type: object
      additionalProperties: false
      description: The buffer period for triggering task execution.
      properties:
        enabled:
          description: Whether the buffer period is enabled or disabled. Defaults to the global buffer period configured for CTS.
          type: boolean
          example: true
        max:
          description: The maximum period of time to wait after changes are detected before triggering the task. Defaults to the global buffer period configured for CTS.
          type: string
          example: "5s"
        min:
          description: 	The minimum period of time to wait after changes are detected before triggering the task. Defaults to the global buffer period configured for CTS.
          type: string
          example: "20s"

    Condition:
      type: object
      additionalProperties: false
      description: The condition on which to trigger the task to execute. If the task has the deprecated services field configured as a module input, it is represented here as condition.services.
      properties:
        catalog_services:
          $ref: '#/components/schemas/CatalogServicesCondition'
        services:
          $ref: '#/components/schemas/ServicesCondition'
        consul_kv:
          $ref: '#/components/schemas/ConsulKVCondition'
        schedule:
          $ref: '#/components/schemas/ScheduleCondition'

    ModuleInput:
      type: object
      additionalProperties: false
      description: The additional module input(s) that the tasks provides to the Terraform module on execution. If the task has the deprecated services field configured as a module input, it is represented here as module_input.services.
      properties:
        services:
          $ref: '#/components/schemas/ServicesModuleInput'
        consul_kv:
          $ref: '#/components/schemas/ConsulKVModuleInput'

    VariableMap:
      description: The map of variables that are provided to the task's module.
      type: object
      additionalProperties:
        type: string

    ServicesCondition:
      type: object
      additionalProperties: false
      properties:
        regexp:
          type: string
          example: "web.*"
        names:
          type: array
          items:
            type: string
          example: ["web", "api"]
        filter:
          type: string
          example: '\"test\" in Service.Tags'
        datacenter:
          type: string
          example: "dc1"
        namespace:
          type: string
          example: "default"
        cts_user_defined_meta:
          type: object
          additionalProperties:
            type: string
        use_as_module_input:
          type: boolean
          default: true
          example: false
    CatalogServicesCondition:
      type: object
      additionalProperties: false
      properties:
        datacenter:
          type: string
          example: "dc1"
        regexp:
          type: string
          example: "web.*"
        namespace:
          type: string
          example: "default"
        node_meta:
          type: object
          additionalProperties:
            type: string
          example:
            key: value
        use_as_module_input:
          type: boolean
          default: true
          example: false
      required:
        - regexp
    ConsulKVCondition:
      type: object
      additionalProperties: false
      properties:
        path:
          type: string
          example: "my-key"
        recurse:
          type: boolean
          default: false
          example: false
        datacenter:
          type: string
          example: "dc1"
        namespace:
          type: string
          example: "default"
        use_as_module_input:
          type: boolean
          default: true
          example: false
      required:
        - path
    ScheduleCondition:
      type: object
      additionalProperties: false
      properties:
        cron:
          type: string
          example: "* * * * Mon"
      required:
        - cron

    ServicesModuleInput:
      type: object
      additionalProperties: false
      properties:
        regexp:
          type: string
          example: "web.*"
        names:
          type: array
          items:
            type: string
          example: ["web", "api"]
        filter:
          type: string
          example: '\"test\" in Service.Tags'
        datacenter:
          type: string
          example: "dc1"
        namespace:
          type: string
          example: "default"
        cts_user_defined_meta:
          type: object
          additionalProperties:
            type: string
    ConsulKVModuleInput:
      type: object
      additionalProperties: false
      properties:
        path:
          type: string
          example: "my-key"
        recurse:
          type: boolean
          default: false
          example: false
        datacenter:
          type: string
          example: "dc1"
        namespace:
          type: string
          example: "default"
      required:
        - path

    TerraformCloudWorkspace:
      type: object
      additionalProperties: false
      description: Enterprise only. Configuration values to use for the Terraform Cloud workspace associated with the task. This is only available when used with the Terraform Cloud driver.
      properties:
        execution_mode:
          type: string
          example: "agent"
          description: Enterprise only. Execution mode to set for the Terraform Cloud workspace associated with the task. Can only be "remote" or "agent". Defaults to "remote".
        agent_pool_id:
          type: string
          example: "apool-123"
          description: Enterprise only. Agent pool ID to set for the Terraform Cloud workspace associated with the task when the execution mode is "agent". Either agent_pool_id or agent_pool_name is required if execution mode is "agent". If both are set, then agent_pool_id takes precedence.
        agent_pool_name:
          type: string
          example: "test_agent_pool"
          description: Enterprise only. Name of agent pool to set for the Terraform Cloud workspace associated with the task when the execution mode is "agent". Either agent_pool_id or agent_pool_name is required if execution mode is "agent". If both are set, then agent_pool_id takes precedence.
        terraform_version:
          type: string
          description: Enterprise only. The version of Terraform to use for the Terraform Cloud workspace associated with the task. This is only available when used with the Terraform Cloud driver. Defaults to the latest compatible version if not set.
          example: "1.0.0"

    Run:
      type: object
      additionalProperties: false
      properties:
        plan:
          type: string
          example: "module.test-task.local_file.greeting_services: Refreshing state... [id=2d5049b47d16d9c4d15cc59950fdd3de24b79716]\nmodule.test-task.local_file.greeting: Refreshing state... [id=69342c5c39e5ae5f0077aecc32c0f81811fb8193]\n\nTerraform used the selected providers to generate the following execution\nplan. Resource actions are indicated with the following symbols:\n-/+ destroy and then create replacement\n\nTerraform will perform the following actions:\n\n  # module.test-task.local_file.greeting_services must be replaced\n-/+ resource \"local_file\" \"greeting_services\" {\n      ~ content              = <<-EOT # forces replacement\n          - Hello, api!\n            Hello, web!\n            Hello, web!\n        EOT\n      ~ id                   = \"2d5049b47d16d9c4d15cc59950fdd3de24b79716\" -> (known after apply)\n        # (3 unchanged attributes hidden)\n    }\n\nPlan: 1 to add, 0 to change, 1 to destroy.\n"
        changes_present:
          type: boolean
          description: Whether or not infrastructure changes were detected during task inspection.
        tfc_run_url:
          type: string
          description: Enterprise only. URL of Terraform Cloud run that corresponds to the task run.
          example: https://app.terraform.io/app/my-org/workspaces/my-ws/runs/run-abcDeFgHijk12345

    RequestID:
      type: string
      format: uuid
      example: "bb63cd70-8f45-4f42-b27b-bc2a6f4931e6"

    Error:
      type: object
      additionalProperties: false
      properties:
        message:
          type: string
          example: "this is an error message"
      required:
        - message

    HealthCheckResponse:
      type: object
      additionalProperties: false
      properties:
        error:
          $ref: '#/components/schemas/Error'
      required:
        - request_id
