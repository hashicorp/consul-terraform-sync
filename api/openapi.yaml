openapi: "3.0.0"
info:
  version: 1.0.0
  title: CTS API
  description: API Documentation for Consul-Terraform-Sync, for more information see [Consul NIA API](https://www.consul.io/docs/nia/api)
  contact:
    name: api-tooling-core
  license:
    name: MPL-2.0 License
    url: https://github.com/hashicorp/consul-terraform-sync/blob/main/LICENSE
servers:
  - url: '{protocol}://{host}:{port}'
    description: The Consul-Terraform-Sync Server
    variables:
      protocol:
        enum:
          - 'http'
          - 'https'
        default: 'http'
      host:
        default: 'localhost'
      port:
        default: '8558'
paths:
  /v1/tasks:
    post:
      summary: Creates a new task
      operationId: createTask
      tags:
        - tasks
      description: |
        Creates a new task
      parameters:
        - name: run
          in: query
          description: |
            Different modes for running. Supports run now which runs the task immediately
            and run inspect which creates a dry run task that is inspected and discarded
            at the end of the inspection.
          required: false
          schema:
            type: string
            enum: [now, inspect]
      requestBody:
        description: Task to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
      responses:
        '201':
          description: Task response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/tasks/{name}:
    delete:
      summary: Deletes a task by name
      operationId: deleteTaskByName
      description: Deletes a single task based on the name provided
      tags:
        - tasks
      parameters:
        - name: name
          in: path
          description: Name of task to delete
          required: true
          schema:
            type: string
            example: "taskA"
      responses:
        '204':
          description: Task deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDeleteResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    TaskRequest:
      $ref: '#/components/schemas/Task'

    TaskResponse:
      type: object
      properties:
        task:
          $ref: '#/components/schemas/Task'
        request_id:
          $ref: '#/components/schemas/RequestID'
        run:
          $ref: '#/components/schemas/Run'
      required:
        - request_id

    TaskDeleteResponse:
      type: object
      properties:
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
        - request_id

    ErrorResponse:
      properties:
        error:
          $ref: '#/components/schemas/Error'
        request_id:
          $ref: '#/components/schemas/RequestID'
      required:
        - error
        - request_id

    Task:
      type: object
      properties:
        description:
          type: string
          example: "an example task"
        enabled:
          type: boolean
          example: true
          default: true
        name:
          type: string
          example: "taskA"
        providers:
          type: array
          items:
            type: string
          example: []
        services:
          type: array
          items:
            type: string
            example: ["web", "api"]
        module:
          type: string
          example: "org/example/module"
        variables:
          $ref: '#/components/schemas/VariableMap'
        version:
          type: string
          example: "1.0.0"
        buffer_period:
          $ref: '#/components/schemas/BufferPeriod'
        condition:
          $ref: '#/components/schemas/Condition'
        module_input:
          $ref: '#/components/schemas/ModuleInput'
      required:
        - name
        - module
      example:
        condition:
          catalog-services:
            regexp: ".*"
        description: ''
        enabled: true
        name: taskC
        providers: [ ]
        services:
          - web
          - api
        module: org/example/module
        variable_files: [ ]
        version: 1.0.0

    BufferPeriod:
      type: object
      properties:
        enabled:
          type: boolean
          example: true
        max:
          type: string
          example: "5s"
        min:
          type: string
          example: "20s"

    Condition:
      type: object
      properties:
        catalog_services:
          $ref: '#/components/schemas/CatalogServicesCondition'
        services:
          $ref: '#/components/schemas/ServicesCondition'
        consul_kv:
          $ref: '#/components/schemas/ConsulKVCondition'
        schedule:
          $ref: '#/components/schemas/ScheduleCondition'

    ModuleInput:
      type: object
      properties:
        services:
          $ref: '#/components/schemas/ServicesModuleInput'
        consul_kv:
          $ref: '#/components/schemas/ConsulKVModuleInput'

    VariableMap:
      type: object
      additionalProperties:
        type: string

    ServicesCondition:
      type: object
      properties:
        regexp:
          type: string
          example: "web.*"
        names:
          type: array
          items:
            type: string
            example: ["web", "api"]
        use_as_module_input:
          type: boolean
          default: true
          example: false
    CatalogServicesCondition:
      type: object
      properties:
        datacenter:
          type: string
          example: "dc1"
        regexp:
          type: string
          example: "web.*"
        namespace:
          type: string
          example: "default"
        node_meta:
          type: object
          additionalProperties:
            type: string
          example:
            key: value
        use_as_module_input:
          type: boolean
          default: true
          example: false
      required:
        - regexp
    ConsulKVCondition:
      type: object
      properties:
        path:
          type: string
          example: "my-key"
        recurse:
          type: boolean
          default: false
          example: false
        datacenter:
          type: string
          example: "dc1"
        namespace:
          type: string
          example: "default"
        use_as_module_input:
          type: boolean
          default: true
          example: false
      required:
        - path
    ScheduleCondition:
      type: object
      properties:
        cron:
          type: string
          example: "* * * * Mon"
      required:
        - cron

    ServicesModuleInput:
      type: object
      properties:
        regexp:
          type: string
          example: "web.*"
        names:
          type: array
          items:
            type: string
            example: ["web", "api"]
    ConsulKVModuleInput:
      type: object
      properties:
        path:
          type: string
          example: "my-key"
        recurse:
          type: boolean
          default: false
          example: false
        datacenter:
          type: string
          example: "dc1"
        namespace:
          type: string
          example: "default"
      required:
        - path

    Run:
      type: object
      properties:
        plan:
          type: string
          example: "module.test-task.local_file.greeting_services: Refreshing state... [id=2d5049b47d16d9c4d15cc59950fdd3de24b79716]\nmodule.test-task.local_file.greeting: Refreshing state... [id=69342c5c39e5ae5f0077aecc32c0f81811fb8193]\n\nTerraform used the selected providers to generate the following execution\nplan. Resource actions are indicated with the following symbols:\n-/+ destroy and then create replacement\n\nTerraform will perform the following actions:\n\n  # module.test-task.local_file.greeting_services must be replaced\n-/+ resource \"local_file\" \"greeting_services\" {\n      ~ content              = <<-EOT # forces replacement\n          - Hello, api!\n            Hello, web!\n            Hello, web!\n        EOT\n      ~ id                   = \"2d5049b47d16d9c4d15cc59950fdd3de24b79716\" -> (known after apply)\n        # (3 unchanged attributes hidden)\n    }\n\nPlan: 1 to add, 0 to change, 1 to destroy.\n"
        changes_present:
          type: boolean
          description: Whether or not infrastructure changes were detected during task inspection.
        tfc_run_url:
          type: string
          description: Enterprise only. URL of Terraform Cloud run that corresponds to the task run.
          example: https://app.terraform.io/app/my-org/workspaces/my-ws/runs/run-abcDeFgHijk12345

    RequestID:
      type: string
      format: uuid
      example: "bb63cd70-8f45-4f42-b27b-bc2a6f4931e6"

    Error:
      type: object
      properties:
        message:
          type: string
          example: "this is an error message"
      required:
        - message
