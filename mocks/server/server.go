// Code generated by mockery v2.2.1. DO NOT EDIT.

package mocks

import (
	context "context"

	config "github.com/hashicorp/consul-terraform-sync/config"

	mock "github.com/stretchr/testify/mock"
)

// Server is an autogenerated mock type for the Server type
type Server struct {
	mock.Mock
}

// Config provides a mock function with given fields:
func (_m *Server) Config() config.Config {
	ret := _m.Called()

	var r0 config.Config
	if rf, ok := ret.Get(0).(func() config.Config); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(config.Config)
	}

	return r0
}

// Task provides a mock function with given fields: ctx, taskname
func (_m *Server) Task(ctx context.Context, taskname string) (config.TaskConfig, error) {
	ret := _m.Called(ctx, taskname)

	var r0 config.TaskConfig
	if rf, ok := ret.Get(0).(func(context.Context, string) config.TaskConfig); ok {
		r0 = rf(ctx, taskname)
	} else {
		r0 = ret.Get(0).(config.TaskConfig)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, taskname)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TaskCreate provides a mock function with given fields: _a0, _a1
func (_m *Server) TaskCreate(_a0 context.Context, _a1 config.TaskConfig) (config.TaskConfig, error) {
	ret := _m.Called(_a0, _a1)

	var r0 config.TaskConfig
	if rf, ok := ret.Get(0).(func(context.Context, config.TaskConfig) config.TaskConfig); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(config.TaskConfig)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, config.TaskConfig) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TaskCreateAndRun provides a mock function with given fields: _a0, _a1
func (_m *Server) TaskCreateAndRun(_a0 context.Context, _a1 config.TaskConfig) (config.TaskConfig, error) {
	ret := _m.Called(_a0, _a1)

	var r0 config.TaskConfig
	if rf, ok := ret.Get(0).(func(context.Context, config.TaskConfig) config.TaskConfig); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(config.TaskConfig)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, config.TaskConfig) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TaskDelete provides a mock function with given fields: ctx, taskName
func (_m *Server) TaskDelete(ctx context.Context, taskName string) error {
	ret := _m.Called(ctx, taskName)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, taskName)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
