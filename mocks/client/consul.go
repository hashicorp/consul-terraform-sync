// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	api "github.com/hashicorp/consul/api"

	context "context"

	mock "github.com/stretchr/testify/mock"
)

// ConsulClientInterface is an autogenerated mock type for the ConsulClientInterface type
type ConsulClientInterface struct {
	mock.Mock
}

// GetLicense provides a mock function with given fields: ctx, q
func (_m *ConsulClientInterface) GetLicense(ctx context.Context, q *api.QueryOptions) (string, error) {
	ret := _m.Called(ctx, q)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, *api.QueryOptions) string); ok {
		r0 = rf(ctx, q)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *api.QueryOptions) error); ok {
		r1 = rf(ctx, q)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// IsEnterprise provides a mock function with given fields: ctx
func (_m *ConsulClientInterface) IsEnterprise(ctx context.Context) (bool, error) {
	ret := _m.Called(ctx)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context) bool); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
