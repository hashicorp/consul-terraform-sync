version: 2.1

orbs:
  slack: circleci/slack@4.4

jobs:
  unit_integration_tests:
    environment:
      GO111MODULE: "on"
      GO_VERSION: "1.16"
      CONSUL_VERSION: 1.8.0
    docker:
      - image: docker.mirror.hashicorp.services/circleci/golang:${GO_VERSION}
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - checkout
      - restore_cache:
          keys:
            - ct-modcache-v1-{{ checksum "go.mod" }}
      - run: |
          curl -sLo consul.zip https://releases.hashicorp.com/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_linux_amd64.zip
          unzip consul.zip
          sudo cp consul /usr/local/bin/
      - run: |
          make test-integration
      - save_cache:
          key: ct-modcache-v1-{{ checksum "go.mod" }}
          paths:
            - /go/pkg/mod

  vault_integration_tests:
    environment:
      GO111MODULE: "on"
      GO_VERSION: "1.16"
      VAULT_VERSION: "1.7.1"
    docker:
      - image: docker.mirror.hashicorp.services/circleci/golang:${GO_VERSION}
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - checkout
      - restore_cache:
          keys:
            - ct-modcache-v1-{{ checksum "go.mod" }}
      - run:
          name: Install Vault
          command: |
            curl -sLo vault.zip https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip
            unzip vault.zip
            sudo cp vault /usr/local/bin/
            vault version
      - run: |
          go test -count=1 -timeout=80s -tags 'integration vault' ./... -run Vault
      - save_cache:
          key: ct-modcache-v1-{{ checksum "go.mod" }}
          paths:
            - /go/pkg/mod
            
  e2e_tests:
    environment:
      GO111MODULE: "on"
      GO_VERSION: "1.16"
      CONSUL_VERSION: 1.8.0
    docker:
      - image: docker.mirror.hashicorp.services/circleci/golang:${GO_VERSION}
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - checkout
      - restore_cache:
          keys:
            - ct-modcache-v1-{{ checksum "go.mod" }}
      - run: |
          curl -sLo consul.zip https://releases.hashicorp.com/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_linux_amd64.zip
          unzip consul.zip
          sudo cp consul /usr/local/bin/
      - run: |
          make test-e2e-cirecleci
      - save_cache:
          key: ct-modcache-v1-{{ checksum "go.mod" }}
          paths:
            - /go/pkg/mod

  benchmarks:
    parameters:
      no_output_timeout:
        type: string
        description: the job times out after this duration with no output
        default: 30m
    environment:
      GO_VERSION: "1.16"
      CONSUL_VERSION: "1.8.0"
      TERRAFORM_VERSION: "0.14.10"
    docker:
      - image: docker.mirror.hashicorp.services/circleci/golang:${GO_VERSION}
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - checkout
      - run:
          name: Install Consul
          command: |
            curl -sLo consul.zip https://releases.hashicorp.com/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_linux_amd64.zip
            unzip consul.zip
            sudo cp consul /usr/local/bin/
      - run:
          name: Install Terraform
          command: |
            curl -sLo terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
            unzip terraform.zip
            sudo cp terraform /usr/local/bin/
      - run:
          name: Copy terraform to benchmark directory
          command: /bin/cp /usr/local/bin/terraform ./e2e/
      - run:
          name: Version Check
          command: |
            go version
            consul version
            terraform version
      - run:
          name: Run benchmark suite
          no_output_timeout: << parameters.no_output_timeout >>
          command:
            make test-benchmarks | /usr/bin/tee /tmp/benchmarks.json
      - slack/notify:
          event: fail
          template: basic_fail_1
      - run:
          name: Output benchmark results
          command: |
            mkdir /tmp/benchmark_results
            grep 'ns/op' /tmp/benchmarks.json | awk -F '"Output":"'  '{print $2}' | sort \
             > /tmp/benchmark_results/results-${CIRCLE_SHA1}-${CIRCLE_BUILD_NUM}.txt
            cat /tmp/benchmark_results/results-${CIRCLE_SHA1}-${CIRCLE_BUILD_NUM}.txt
      - store_artifacts:
          path: /tmp/benchmarks.json
          destination: benchmarks.json
      - store_artifacts:
          path: /tmp/benchmark_results
          destination: benchmark_results

workflows:
  version: 2
  build-test:
    jobs:
      - unit_integration_tests
      - e2e_tests
  weekly-benchmarks:
    jobs:
      - vault_integration_tests
      - benchmarks
    triggers:
      - schedule:
          # 02:10 UTC every Wednesday
          cron: 10 2 * * 3
          filters:
            branches:
              only:
              - master
